modules = ["bash", "nodejs-20", "python-3.11", "postgresql-16"]
[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = ["freetype", "gumbo", "harfbuzz", "jbig2dec", "libjpeg_turbo", "mupdf", "openjpeg", "poppler", "swig", "tesseract", "xcbuild"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend"

[[workflows.workflow]]
name = "Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run dev"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow]]
name = "Backend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 34567
externalPort = 3000

[[ports]]
localPort = 36317
externalPort = 3002

[[ports]]
localPort = 41355
externalPort = 3001

[deployment]
deploymentTarget = "autoscale"
run = ["bash", "-c", "cd backend && gunicorn app.main:app --bind 0.0.0.0:5000 --workers 4 --worker-class uvicorn.workers.UvicornWorker --timeout 120 --access-logfile - --error-logfile -"]
build = ["bash", "-c", "cd frontend && npm run build && cd ../backend && pip install -r requirements.txt"]
