# nginx.conf - Load Balancer Configuration for Justicia Digital Morocco

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format optimizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Optimizaciones de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream para las instancias de la aplicación
    upstream justicia_backend {
        least_conn;
        server app1:8000 max_fails=3 fail_timeout=30s weight=1;
        server app2:8000 max_fails=3 fail_timeout=30s weight=1;
        server app3:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=search_limit:10m rate=30r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Main server configuration
    server {
        listen 80;
        server_name localhost;
        client_max_body_size 100M;
        client_body_timeout 60s;
        client_header_timeout 60s;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

        # Rate limiting global
        limit_req zone=api_limit burst=100 nodelay;
        limit_conn conn_limit 20;

        # Health check endpoint (sin rate limiting)
        location = /health {
            access_log off;
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
        }

        # Metrics endpoint (sin rate limiting para monitoreo)
        location = /metrics {
            access_log off;
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Authentication endpoints con rate limiting especial
        location /api/v1/auth/ {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
            
            # Headers para autenticación
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # File upload endpoints con rate limiting estricto
        location /api/v1/documents/upload {
            limit_req zone=upload_limit burst=3 nodelay;
            
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts extendidos para uploads grandes
            proxy_connect_timeout 60s;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            
            # Buffering para uploads grandes
            proxy_request_buffering off;
        }

        # Search endpoints con rate limiting moderado
        location /api/v1/search/ {
            limit_req zone=search_limit burst=10 nodelay;
            
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
            proxy_send_timeout 30s;
        }

        # HSM endpoints con rate limiting estricto
        location /api/v1/hsm/ {
            limit_req zone=auth_limit burst=2 nodelay;
            
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_Set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts extendidos para operaciones HSM
            proxy_connect_timeout 30s;
            proxy_read_timeout 120s;
            proxy_send_timeout 60s;
        }

        # API endpoints generales
        location /api/ {
            proxy_pass http://justicia_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
            
            # Headers adicionales para API
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_set_header Accept-Language $http_accept_language;
        }

        # Static files y frontend (cuando esté listo)
        location / {
            root /var/www/html;
            try_files $uri $uri/ /index.html;
            
            # Cache para archivos estáticos
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server configuration (para producción)
    server {
        listen 443 ssl http2;
        server_name justicia.ma www.justicia.ma;
        
        # SSL certificates (configurar en producción)
        ssl_certificate /etc/nginx/ssl/justicia.crt;
        ssl_certificate_key /etc/nginx/ssl/justicia.key;
        
        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # El resto de la configuración es igual al servidor HTTP
        # ... (misma configuración que arriba)
    }

    # Redirect HTTP to HTTPS (para producción)
    server {
        listen 80;
        server_name justicia.ma www.justicia.ma;
        return 301 https://$server_name$request_uri;
    }

    # Monitoring endpoints
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx status
        location = /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # Upstream status
        location = /upstream_status {
            access_log off;
            return 200 "Upstream servers status\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream configuration para otras conexiones
stream {
    # PostgreSQL proxy (si es necesario)
    upstream postgres {
        server db:5432;
    }

    server {
        listen 5433;
        proxy_pass postgres;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}